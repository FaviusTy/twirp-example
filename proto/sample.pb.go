// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/sample.proto

package sample

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Sample struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}
func (*Sample) Descriptor() ([]byte, []int) {
	return fileDescriptor_29c0c13f94a87edd, []int{0}
}

func (m *Sample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample.Unmarshal(m, b)
}
func (m *Sample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample.Marshal(b, m, deterministic)
}
func (m *Sample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample.Merge(m, src)
}
func (m *Sample) XXX_Size() int {
	return xxx_messageInfo_Sample.Size(m)
}
func (m *Sample) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample.DiscardUnknown(m)
}

var xxx_messageInfo_Sample proto.InternalMessageInfo

type Sample_Base struct {
	Str                  string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	Int32                int32    `protobuf:"varint,2,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64                int64    `protobuf:"varint,3,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32               uint32   `protobuf:"varint,4,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64               uint64   `protobuf:"varint,5,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32               int32    `protobuf:"zigzag32,6,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64               int64    `protobuf:"zigzag64,7,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32              uint32   `protobuf:"fixed32,8,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64              uint64   `protobuf:"fixed64,9,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32             int32    `protobuf:"fixed32,10,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64             int64    `protobuf:"fixed64,11,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Double               float64  `protobuf:"fixed64,12,opt,name=double,proto3" json:"double,omitempty"`
	Bool                 bool     `protobuf:"varint,13,opt,name=bool,proto3" json:"bool,omitempty"`
	Bytes                []byte   `protobuf:"bytes,14,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sample_Base) Reset()         { *m = Sample_Base{} }
func (m *Sample_Base) String() string { return proto.CompactTextString(m) }
func (*Sample_Base) ProtoMessage()    {}
func (*Sample_Base) Descriptor() ([]byte, []int) {
	return fileDescriptor_29c0c13f94a87edd, []int{0, 0}
}

func (m *Sample_Base) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample_Base.Unmarshal(m, b)
}
func (m *Sample_Base) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample_Base.Marshal(b, m, deterministic)
}
func (m *Sample_Base) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample_Base.Merge(m, src)
}
func (m *Sample_Base) XXX_Size() int {
	return xxx_messageInfo_Sample_Base.Size(m)
}
func (m *Sample_Base) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample_Base.DiscardUnknown(m)
}

var xxx_messageInfo_Sample_Base proto.InternalMessageInfo

func (m *Sample_Base) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

func (m *Sample_Base) GetInt32() int32 {
	if m != nil {
		return m.Int32
	}
	return 0
}

func (m *Sample_Base) GetInt64() int64 {
	if m != nil {
		return m.Int64
	}
	return 0
}

func (m *Sample_Base) GetUint32() uint32 {
	if m != nil {
		return m.Uint32
	}
	return 0
}

func (m *Sample_Base) GetUint64() uint64 {
	if m != nil {
		return m.Uint64
	}
	return 0
}

func (m *Sample_Base) GetSint32() int32 {
	if m != nil {
		return m.Sint32
	}
	return 0
}

func (m *Sample_Base) GetSint64() int64 {
	if m != nil {
		return m.Sint64
	}
	return 0
}

func (m *Sample_Base) GetFixed32() uint32 {
	if m != nil {
		return m.Fixed32
	}
	return 0
}

func (m *Sample_Base) GetFixed64() uint64 {
	if m != nil {
		return m.Fixed64
	}
	return 0
}

func (m *Sample_Base) GetSfixed32() int32 {
	if m != nil {
		return m.Sfixed32
	}
	return 0
}

func (m *Sample_Base) GetSfixed64() int64 {
	if m != nil {
		return m.Sfixed64
	}
	return 0
}

func (m *Sample_Base) GetDouble() float64 {
	if m != nil {
		return m.Double
	}
	return 0
}

func (m *Sample_Base) GetBool() bool {
	if m != nil {
		return m.Bool
	}
	return false
}

func (m *Sample_Base) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type Sample_Repeated struct {
	Str                  []string       `protobuf:"bytes,1,rep,name=str,proto3" json:"str,omitempty"`
	Int32                []int32        `protobuf:"varint,2,rep,packed,name=int32,proto3" json:"int32,omitempty"`
	Int64                []int64        `protobuf:"varint,3,rep,packed,name=int64,proto3" json:"int64,omitempty"`
	Uint32               []uint32       `protobuf:"varint,4,rep,packed,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64               []uint64       `protobuf:"varint,5,rep,packed,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32               []int32        `protobuf:"zigzag32,6,rep,packed,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64               []int64        `protobuf:"zigzag64,7,rep,packed,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32              []uint32       `protobuf:"fixed32,8,rep,packed,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64              []uint64       `protobuf:"fixed64,9,rep,packed,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32             []int32        `protobuf:"fixed32,10,rep,packed,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64             []int64        `protobuf:"fixed64,11,rep,packed,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Double               []float64      `protobuf:"fixed64,12,rep,packed,name=double,proto3" json:"double,omitempty"`
	Bool                 []bool         `protobuf:"varint,13,rep,packed,name=bool,proto3" json:"bool,omitempty"`
	Bytes                [][]byte       `protobuf:"bytes,14,rep,name=bytes,proto3" json:"bytes,omitempty"`
	Bases                []*Sample_Base `protobuf:"bytes,15,rep,name=bases,proto3" json:"bases,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Sample_Repeated) Reset()         { *m = Sample_Repeated{} }
func (m *Sample_Repeated) String() string { return proto.CompactTextString(m) }
func (*Sample_Repeated) ProtoMessage()    {}
func (*Sample_Repeated) Descriptor() ([]byte, []int) {
	return fileDescriptor_29c0c13f94a87edd, []int{0, 1}
}

func (m *Sample_Repeated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample_Repeated.Unmarshal(m, b)
}
func (m *Sample_Repeated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample_Repeated.Marshal(b, m, deterministic)
}
func (m *Sample_Repeated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample_Repeated.Merge(m, src)
}
func (m *Sample_Repeated) XXX_Size() int {
	return xxx_messageInfo_Sample_Repeated.Size(m)
}
func (m *Sample_Repeated) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample_Repeated.DiscardUnknown(m)
}

var xxx_messageInfo_Sample_Repeated proto.InternalMessageInfo

func (m *Sample_Repeated) GetStr() []string {
	if m != nil {
		return m.Str
	}
	return nil
}

func (m *Sample_Repeated) GetInt32() []int32 {
	if m != nil {
		return m.Int32
	}
	return nil
}

func (m *Sample_Repeated) GetInt64() []int64 {
	if m != nil {
		return m.Int64
	}
	return nil
}

func (m *Sample_Repeated) GetUint32() []uint32 {
	if m != nil {
		return m.Uint32
	}
	return nil
}

func (m *Sample_Repeated) GetUint64() []uint64 {
	if m != nil {
		return m.Uint64
	}
	return nil
}

func (m *Sample_Repeated) GetSint32() []int32 {
	if m != nil {
		return m.Sint32
	}
	return nil
}

func (m *Sample_Repeated) GetSint64() []int64 {
	if m != nil {
		return m.Sint64
	}
	return nil
}

func (m *Sample_Repeated) GetFixed32() []uint32 {
	if m != nil {
		return m.Fixed32
	}
	return nil
}

func (m *Sample_Repeated) GetFixed64() []uint64 {
	if m != nil {
		return m.Fixed64
	}
	return nil
}

func (m *Sample_Repeated) GetSfixed32() []int32 {
	if m != nil {
		return m.Sfixed32
	}
	return nil
}

func (m *Sample_Repeated) GetSfixed64() []int64 {
	if m != nil {
		return m.Sfixed64
	}
	return nil
}

func (m *Sample_Repeated) GetDouble() []float64 {
	if m != nil {
		return m.Double
	}
	return nil
}

func (m *Sample_Repeated) GetBool() []bool {
	if m != nil {
		return m.Bool
	}
	return nil
}

func (m *Sample_Repeated) GetBytes() [][]byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func (m *Sample_Repeated) GetBases() []*Sample_Base {
	if m != nil {
		return m.Bases
	}
	return nil
}

func init() {
	proto.RegisterType((*Sample)(nil), "sample.Sample")
	proto.RegisterType((*Sample_Base)(nil), "sample.Sample.Base")
	proto.RegisterType((*Sample_Repeated)(nil), "sample.Sample.Repeated")
}

func init() { proto.RegisterFile("proto/sample.proto", fileDescriptor_29c0c13f94a87edd) }

var fileDescriptor_29c0c13f94a87edd = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x99, 0x4e, 0x92, 0xa6, 0xdb, 0xd6, 0xd6, 0x55, 0x74, 0xc9, 0x69, 0xf1, 0xb4, 0x5e,
	0x2a, 0xa4, 0x21, 0xe7, 0x22, 0x78, 0x97, 0xf1, 0x09, 0x12, 0xbb, 0x62, 0xa1, 0x9a, 0xd2, 0x4d,
	0x41, 0x8f, 0xbe, 0xa2, 0x6f, 0xe0, 0x9b, 0x48, 0xb2, 0x49, 0x2a, 0x25, 0xeb, 0x6d, 0xbe, 0x7f,
	0x66, 0x20, 0x7c, 0x99, 0x65, 0x7c, 0xb7, 0x2f, 0xca, 0xe2, 0xce, 0x64, 0x6f, 0xbb, 0xad, 0x5e,
	0xd4, 0xc0, 0x03, 0x4b, 0x37, 0x3f, 0x3e, 0x0b, 0x9e, 0xea, 0x32, 0xfa, 0x1e, 0x30, 0xef, 0x3e,
	0x33, 0x9a, 0xcf, 0x19, 0x9a, 0x72, 0x2f, 0x40, 0x82, 0x1a, 0x51, 0x55, 0xf2, 0x4b, 0xe6, 0x6f,
	0xde, 0xcb, 0x65, 0x2c, 0x06, 0x12, 0x94, 0x4f, 0x16, 0x9a, 0x34, 0x4d, 0x04, 0x4a, 0x50, 0x48,
	0x16, 0xf8, 0x15, 0x0b, 0x0e, 0x76, 0xd8, 0x93, 0xa0, 0xa6, 0xd4, 0x50, 0x9b, 0xa7, 0x89, 0xf0,
	0x25, 0x28, 0x8f, 0x1a, 0xaa, 0x72, 0x63, 0xe7, 0x03, 0x09, 0xea, 0x9c, 0x1a, 0x6a, 0xf3, 0x34,
	0x11, 0x43, 0x09, 0x8a, 0x53, 0x43, 0x5c, 0xb0, 0xe1, 0xcb, 0xe6, 0x43, 0xaf, 0x97, 0xb1, 0x08,
	0x25, 0xa8, 0x21, 0xb5, 0xd8, 0x75, 0xd2, 0x44, 0x8c, 0x24, 0xa8, 0x80, 0x5a, 0xe4, 0x11, 0x0b,
	0x4d, 0xbb, 0xc4, 0x24, 0xa8, 0x19, 0x75, 0x7c, 0xec, 0xa5, 0x89, 0x18, 0x4b, 0x50, 0x73, 0xea,
	0xb8, 0xfa, 0x86, 0x75, 0x71, 0xc8, 0xb7, 0x5a, 0x4c, 0x24, 0x28, 0xa0, 0x86, 0x38, 0x67, 0x5e,
	0x5e, 0x14, 0x5b, 0x31, 0x95, 0xa0, 0x42, 0xaa, 0xeb, 0xca, 0x46, 0xfe, 0x59, 0x6a, 0x23, 0xce,
	0x24, 0xa8, 0x09, 0x59, 0x88, 0xbe, 0x90, 0x85, 0xa4, 0x77, 0x3a, 0x2b, 0xf5, 0xfa, 0x28, 0x16,
	0x7b, 0xc4, 0x62, 0xaf, 0x58, 0xec, 0x17, 0x8b, 0x0e, 0xb1, 0xe8, 0x10, 0x8b, 0x0e, 0xb1, 0xe8,
	0x12, 0x8b, 0x4e, 0xb1, 0xe8, 0x16, 0x8b, 0xff, 0x88, 0x45, 0xa7, 0x58, 0xec, 0x15, 0x8b, 0x7d,
	0x62, 0xb1, 0x13, 0xcb, 0x6f, 0x99, 0x9f, 0x67, 0x46, 0x1b, 0x31, 0x93, 0xa8, 0xc6, 0xf1, 0xc5,
	0xa2, 0x39, 0x6f, 0x7b, 0xcc, 0x8b, 0xea, 0x90, 0xc9, 0x4e, 0xc4, 0x2b, 0x16, 0x3e, 0x3c, 0xbf,
	0x16, 0xf5, 0x6d, 0x27, 0x7f, 0xea, 0xbe, 0x9d, 0xa8, 0x2f, 0x8c, 0x1f, 0xd9, 0xa4, 0xda, 0xea,
	0x7e, 0xe4, 0xea, 0x84, 0xaf, 0x4f, 0x96, 0xda, 0x46, 0xe4, 0x6a, 0xe4, 0x41, 0xfd, 0x0c, 0x97,
	0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x76, 0x32, 0x86, 0x9c, 0x03, 0x00, 0x00,
}
